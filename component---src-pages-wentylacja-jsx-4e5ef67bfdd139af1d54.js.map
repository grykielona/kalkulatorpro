{"version":3,"file":"component---src-pages-wentylacja-jsx-4e5ef67bfdd139af1d54.js","mappings":"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","sources":["webpack://kalkulatorpro/./src/components/Vent/RecuCalc/RecuEfficiencyCalc.jsx","webpack://kalkulatorpro/./src/components/Vent/RecuCalc/RecuTempCalc.jsx","webpack://kalkulatorpro/./src/components/Vent/RecuCalc/RecuCalc.jsx","webpack://kalkulatorpro/./src/components/Vent/VentCalc/VentCalcRect.jsx","webpack://kalkulatorpro/./src/components/Vent/VentCalc/VentCalcRound.jsx","webpack://kalkulatorpro/./src/components/Vent/VentCalc/VentCalc.jsx","webpack://kalkulatorpro/./src/components/Vent/VentInfo/VentInfo.jsx","webpack://kalkulatorpro/./src/pages/wentylacja.jsx"],"sourcesContent":["import { Grid, Paper, Typography } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport { calcEfficiencyOfRecovery, roundToDigits } from '../../../helpers/physicalCalculations'\nimport CustomTextField from '../../Inputs/CustomTextField'\n\nconst paperSX = { py: 1, px: 2 }\nconst typograhySX = { fontSize: '0.8rem', textTransform: 'uppercase', mb: 2, mt: 1 }\n\nconst RecuEfficiencyCalc = () => {\n  const [tempExternal, setTempExternal] = useState('')\n  const [tempExhaust, setTempExhaust] = useState('')\n  const [tempSupply, setTempSupply] = useState('')\n  const [efficiency, setEfficiency] = useState('')\n  const [tempExhaustError, setTempExhaustError] = useState('')\n  const [tempSupplyError, setTempSupplyError] = useState('')\n\n  useEffect(() => {\n    if (tempExhaust !== '' && Number(tempExternal) >= Number(tempExhaust)) {\n      setEfficiency('')\n      setTempExhaustError('temp wyw. musi być większa od zewnętrznej')\n      return\n    }\n    setTempExhaustError('')\n\n    if (tempExhaust !== '' && Number(tempSupply) > Number(tempExhaust)) {\n      setEfficiency('')\n      setTempSupplyError('temp nawiewu nie moze być większa od wywiewu')\n      return\n    }\n\n    if (tempSupply !== '' && Number(tempSupply) < Number(tempExternal)) {\n      setEfficiency('')\n      setTempSupplyError('temp nawiewu nie moze być mniejsza od zewnętrznej')\n      return\n    }\n\n    setTempSupplyError('')\n    if (tempExternal === '' || tempExhaust === '' || tempSupply === '') {\n      setEfficiency('')\n      return\n    }\n    setTempExhaustError('')\n\n    setEfficiency(calcEfficiencyOfRecovery(tempExternal, tempExhaust, tempSupply))\n  }, [tempExternal, tempExhaust, tempSupply])\n\n  const handleTempExternalChange = (e) => {\n    setTempExternal(e)\n  }\n  const handleTempExhaustChange = (e) => {\n    setTempExhaust(e)\n  }\n  const handleSupplyChange = (e) => {\n    setTempSupply(e)\n  }\n\n  return (\n    <>\n      <Grid item xs={12}>\n        <Paper elevation={2} sx={paperSX}>\n          <Typography sx={typograhySX}>Sprawność wymiennika</Typography>\n          <Grid container spacing={1}>\n            <Grid xs={4} item>\n              <CustomTextField\n                value={tempExternal}\n                onChange={handleTempExternalChange}\n                label=\"Temp. zew. °C\"\n              />\n            </Grid>\n            <Grid xs={4} item>\n              <CustomTextField\n                value={tempExhaust}\n                helperText={tempExhaustError}\n                onChange={handleTempExhaustChange}\n                label=\"Temp. wyw. °C\"\n              />\n            </Grid>\n            <Grid xs={4} item>\n              <CustomTextField\n                helperText={tempSupplyError}\n                value={tempSupply}\n                onChange={handleSupplyChange}\n                label=\"Temp. naw °C\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      {efficiency !== '' && (\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={paperSX}>\n            <Typography variant=\"body2\">\n              Sprawność wymiennika wynosi\n              <strong>{` ${roundToDigits(efficiency, 1)}%`}</strong>\n            </Typography>\n          </Paper>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default RecuEfficiencyCalc\n","import { Grid, Paper, Typography } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport {\n  calcTempAfterRecovery,\n  roundToDigits,\n  validateEfficiency,\n} from '../../../helpers/physicalCalculations'\nimport CustomTextField from '../../Inputs/CustomTextField'\n\nconst paperSX = { py: 1, px: 2 }\nconst typograhySX = { fontSize: '0.8rem', textTransform: 'uppercase', mb: 2, mt: 1 }\n\nconst RecuTempCalc = () => {\n  const [tempExternal, setTempExternal] = useState('')\n  const [tempExhaust, setTempExhaust] = useState('')\n  const [tempSupply, setTempSupply] = useState('')\n  const [efficiency, setEfficiency] = useState('')\n\n  useEffect(() => {\n    if (tempExternal === '' || tempExhaust === '' || efficiency === '') {\n      setTempSupply('')\n      return\n    }\n    setTempSupply(calcTempAfterRecovery(tempExternal, tempExhaust, efficiency))\n  }, [tempExternal, tempExhaust, efficiency])\n\n  const handleTempExternalChange = (e) => {\n    setTempExternal(e)\n  }\n  const handleTempExhaustChange = (e) => {\n    setTempExhaust(e)\n  }\n  const handleEfficiencyChange = (e) => {\n    setEfficiency(validateEfficiency(e))\n  }\n\n  return (\n    <>\n      <Grid item xs={12}>\n        <Paper elevation={2} sx={paperSX}>\n          <Typography sx={typograhySX}>Temperatura za wymiennikiem</Typography>\n          <Grid container spacing={1}>\n            <Grid xs={4} item>\n              <CustomTextField\n                value={tempExternal}\n                onChange={handleTempExternalChange}\n                label=\"Temp. zew. °C\"\n              />\n            </Grid>\n            <Grid xs={4} item>\n              <CustomTextField\n                value={tempExhaust}\n                onChange={handleTempExhaustChange}\n                label=\"Temp. wyw. °C\"\n              />\n            </Grid>\n            <Grid xs={4} item>\n              <CustomTextField\n                value={efficiency}\n                onChange={handleEfficiencyChange}\n                label=\"sprawność %\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      {tempSupply !== '' && (\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={paperSX}>\n            <Typography variant=\"body2\">\n              Temperatura za wymiennikiem\n              <strong>{` ${roundToDigits(tempSupply, 1)} °C`}</strong>\n            </Typography>\n          </Paper>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default RecuTempCalc\n","import { Grid } from '@mui/material'\nimport React from 'react'\nimport RecuEfficiencyCalc from './RecuEfficiencyCalc'\nimport RecuTempCalc from './RecuTempCalc'\n\nconst RecuCalc = () => (\n  <Grid container spacing={1}>\n    <RecuTempCalc />\n    <RecuEfficiencyCalc />\n  </Grid>\n)\n\nexport default RecuCalc\n","import React, { useEffect, useState } from 'react'\nimport { Grid, Paper, Typography } from '@mui/material'\nimport * as Calc from '../../../helpers/physicalCalculations'\nimport CustomTextField from '../../Inputs/CustomTextField'\n\nconst paperSX = { py: 1, px: 2 }\nconst typograhySX = { fontSize: '0.8rem', textTransform: 'uppercase', mb: 2, mt: 1 }\n\nconst VentCalcRect = () => {\n  const [flowRectCMPH, setFlowRectCMPH] = useState('')\n  const [flowRectCDPS, setFlowRectCDPS] = useState('')\n  const [sideA, setSideA] = useState('')\n  const [sideB, setSideB] = useState('')\n\n  const [resultsRect, setResultsRect] = useState(null)\n\n  useEffect(() => {\n    if (flowRectCMPH === '' || flowRectCMPH === 0 || sideA === '' || sideB === '') {\n      setResultsRect(null)\n      return\n    }\n    setResultsRect(Calc.calcFlowSpeedRect(flowRectCMPH, sideA, sideB))\n  }, [flowRectCMPH, sideA, sideB])\n\n  const handleRectCMPHChange = (e) => {\n    setFlowRectCDPS(Calc.cmphToLps(e))\n    setFlowRectCMPH(e)\n  }\n\n  const handleRectCDPSChange = (e) => {\n    setFlowRectCMPH(Calc.lpsToCmph(e))\n    setFlowRectCDPS(e)\n  }\n\n  const handleSideAChange = (e) => {\n    setSideA(e)\n  }\n\n  const handleSideBChange = (e) => {\n    setSideB(e)\n  }\n\n  return (\n    <>\n      <Grid item xs={12}>\n        <Paper elevation={2} sx={paperSX}>\n          <Typography sx={typograhySX}>Dobór kanału prostokątnego</Typography>\n          <Grid container spacing={1} item xs={12}>\n            <Grid item xs={6}>\n              <CustomTextField\n                helperText={flowRectCMPH && !sideA ? 'Podaj wymiar' : ''}\n                label=\"Bok A\"\n                value={sideA}\n                onChange={handleSideAChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <CustomTextField\n                helperText={flowRectCMPH && !sideB ? 'Podaj wymiar' : ''}\n                label=\"Bok B\"\n                value={sideB}\n                onChange={handleSideBChange}\n              />\n            </Grid>\n            <Grid item xs={5}>\n              <CustomTextField\n                label=\"Przepływ m3/h\"\n                value={flowRectCMPH}\n                onChange={handleRectCMPHChange}\n              />\n            </Grid>\n            <Grid sx={{ textAlign: 'center' }} item xs={2}>\n              <Typography variant=\"body2\" sx={{ mt: 1.5 }}>\n                Lub\n              </Typography>\n            </Grid>\n            <Grid item xs={5}>\n              <CustomTextField\n                label=\"Przepływ dm3/s\"\n                value={flowRectCDPS}\n                onChange={handleRectCDPSChange}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      {resultsRect && (\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={paperSX}>\n            <Typography sx={{ ...typograhySX, mb: 0 }}>Wyniki</Typography>\n            <Typography variant=\"body1\">\n              Dla przepływu\n              <strong>{` ${flowRectCMPH} m3/h ~ ${flowRectCDPS} dm3/s `}</strong>w kanale{' '}\n              <strong>\n                {sideA}x{sideB}\n              </strong>{' '}\n              mm\n              {`(${Calc.getRectAreaInSqM(sideA, sideB)}`}m<sup>2</sup>)\n            </Typography>\n            <Typography variant=\"body1\">\n              prędkość wynosi\n              <strong>\n                <u> {Calc.roundToDigits(resultsRect, 2)} m/s</u>\n              </strong>\n            </Typography>\n          </Paper>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default VentCalcRect\n","import React, { useEffect, useState } from 'react'\nimport { Grid, Paper, Typography } from '@mui/material'\nimport * as Calc from '../../../helpers/physicalCalculations'\nimport CustomTextField from '../../Inputs/CustomTextField'\nimport ResultList from '../../Result/ResultList'\nimport TooMuchFlow from '../../Result/TooMuchFlow'\n\nconst paperSX = { py: 1, px: 2 }\nconst typograhySX = { fontSize: '0.8rem', textTransform: 'uppercase', mb: 2, mt: 1 }\n\nconst VentCalcRound = () => {\n  const [flowRoundCMPH, setFlowRoundCMPH] = useState('')\n  const [flowRoundCDPS, setFlowRoundCDPS] = useState('')\n  const [resultsRound, setResultsRound] = useState(null)\n\n  useEffect(() => {\n    if (flowRoundCMPH === '' || flowRoundCMPH === 0) {\n      setResultsRound(null)\n      return\n    }\n    setResultsRound(Calc.getArrayOfPressDropAir(flowRoundCMPH))\n  }, [flowRoundCMPH])\n\n  const handleRoundCMPHChange = (e) => {\n    setFlowRoundCDPS(Calc.cmphToLps(e))\n    setFlowRoundCMPH(e)\n  }\n\n  const handleRoundCDPSChange = (e) => {\n    setFlowRoundCMPH(Calc.lpsToCmph(e))\n    setFlowRoundCDPS(e)\n  }\n\n  return (\n    <>\n      <Grid item xs={12}>\n        <Paper elevation={2} sx={paperSX}>\n          <Typography sx={typograhySX}>Automatyczny dobór kanału okrągłego</Typography>\n          <Grid container spacing={1} item xs={12}>\n            <Grid item xs={5}>\n              <CustomTextField\n                label=\"Przepływ m3/h\"\n                value={flowRoundCMPH}\n                onChange={handleRoundCMPHChange}\n              />\n            </Grid>\n            <Grid sx={{ textAlign: 'center' }} item xs={2}>\n              <Typography variant=\"body2\" sx={{ mt: 1.5 }}>\n                Lub\n              </Typography>\n            </Grid>\n            <Grid item xs={5}>\n              <CustomTextField\n                label=\"Przepływ dm3/s\"\n                value={flowRoundCDPS}\n                onChange={handleRoundCDPSChange}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <TooMuchFlow results={resultsRound} />\n\n      {resultsRound && (\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={paperSX}>\n            <Typography sx={{ ...typograhySX, mb: 0 }}>Wyniki</Typography>\n            <Typography variant=\"body2\">\n              Dla przepływu\n              <strong>{` ${flowRoundCMPH} m3/h ~ ${flowRoundCDPS} dm3/s `}</strong>\n              dobrano:\n            </Typography>\n            <ResultList isSpiro results={resultsRound} />\n          </Paper>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default VentCalcRound\n","import { Grid } from '@mui/material'\nimport React from 'react'\nimport VentCalcRect from './VentCalcRect'\nimport VentCalcRound from './VentCalcRound'\n\nconst VentCalc = () => (\n  <Grid container spacing={1}>\n    <VentCalcRound />\n    <VentCalcRect />\n  </Grid>\n)\n\nexport default VentCalc\n","import { Box, Typography } from '@mui/material'\nimport React from 'react'\nimport { spiro } from '../../../helpers/pipes'\nimport CustomModal from '../../CustomModal/CustomModal'\nimport PipeList from '../../Informations/PipeList'\n\nconst VentInfo = () => (\n  <Box sx={{ my: { xs: 2, md: 4 }, display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n    <CustomModal label=\"TYPOSZEREGI\" title=\"Typoszeregi rur\">\n      <PipeList header=\"Kanały Spiro\" pipeObject={spiro} />\n    </CustomModal>\n    <CustomModal maxWidth=\"md\" label=\"POMOC\" title=\"Instrukcja\">\n      <Typography variant=\"body1\" mb={2}>\n        Kanały wentylacyjne dobierane są w oparciu o kryterium prędkości.\n      </Typography>\n      <Typography variant=\"body1\" mb={2}>\n        Opór jednostkowy w Pa/m obliczany jest na podstawie wzoru Darcy-Weisbecha. Przyjęto\n        chropowatość bezwględną dla stali ocynkowanej.\n      </Typography>\n      <Typography variant=\"body1\" mb={2}>\n        Podane dobory powinny zostać przeanalizowane przez projektanta i dostosowane odpowiednio do\n        danej sytuacji projektowej.\n      </Typography>\n    </CustomModal>\n    <CustomModal maxWidth=\"md\" label=\"WIEDZA\" title=\"Wiedza\">\n      <Typography variant=\"body1\" mb={2}>\n        Kryterium prędkość dla doboru kanałów wynosi 5,5 m/s\n      </Typography>\n      <Typography variant=\"body1\" mb={2}>\n        Zalecana prędkość powietrza przy czerpni nie więcej niż 2,5 m/s\n      </Typography>\n      <Typography variant=\"body1\" mb={2}>\n        Zalecana prędkość powietrza przy wyrzutni nie więcej niż 4,0 m/s\n      </Typography>\n      <Typography variant=\"body1\" mb={2}>\n        W przypadku kanałów w obiektach przemysłowych prędkości powietrza w kanałach mogą być\n        większe, rzędu 6-10 m/s\n      </Typography>\n      <Typography variant=\"body1\" mb={2}>\n        Dla kanałów przy nawiewnikach zaleca się prędkości mniejsze 3-4 m/s\n      </Typography>\n    </CustomModal>\n  </Box>\n)\n\nexport default VentInfo\n","import { Container, Grid, useMediaQuery } from '@mui/material'\nimport React, { useState } from 'react'\nimport { SEO } from '../components/Layout/seo'\nimport CustomTabsNav from '../components/Tabs/CustomTabsNav'\nimport TabPanel from '../components/Tabs/TabPanel'\nimport RecuCalc from '../components/Vent/RecuCalc/RecuCalc'\nimport VentCalc from '../components/Vent/VentCalc/VentCalc'\nimport VentInfo from '../components/Vent/VentInfo/VentInfo'\n\nconst tabs = [\n  { label: 'Przewody', component: <VentCalc /> },\n  { label: 'Odzysk ciepła', component: <RecuCalc /> },\n]\n\nconst VentPage = () => {\n  const [tabIdx, setTabIdx] = useState(0)\n  const matches = useMediaQuery((theme) => theme.breakpoints.up('md'))\n  const tabNavOrientation = matches ? 'vertical' : 'horizontal'\n\n  return (\n    <Container sx={{ mt: 2, px: 1 }} maxWidth=\"md\">\n      <Grid container spacing={1}>\n        <Grid item xs={12} md={2}>\n          <CustomTabsNav\n            orientation={tabNavOrientation}\n            tab={tabIdx}\n            setTab={setTabIdx}\n            tabItems={tabs}\n          />\n        </Grid>\n        <Grid item xs={12} md={10}>\n          {tabs.map((tab, idx) => (\n            <TabPanel key={tab.label} index={idx} value={tabIdx}>\n              {tab.component}\n            </TabPanel>\n          ))}\n          <VentInfo />\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default VentPage\n\nexport const Head = () => <SEO title=\"wentylacja\" />\n"],"names":["paperSX","py","px","typograhySX","fontSize","textTransform","mb","mt","useState","tempExternal","setTempExternal","tempExhaust","setTempExhaust","tempSupply","setTempSupply","efficiency","setEfficiency","tempExhaustError","setTempExhaustError","tempSupplyError","setTempSupplyError","useEffect","Number","calcEfficiencyOfRecovery","Grid","item","xs","Paper","elevation","sx","Typography","container","spacing","CustomTextField","value","onChange","e","label","helperText","variant","roundToDigits","calcTempAfterRecovery","validateEfficiency","flowRectCMPH","setFlowRectCMPH","flowRectCDPS","setFlowRectCDPS","sideA","setSideA","sideB","setSideB","resultsRect","setResultsRect","Calc","textAlign","flowRoundCMPH","setFlowRoundCMPH","flowRoundCDPS","setFlowRoundCDPS","resultsRound","setResultsRound","TooMuchFlow","results","ResultList","isSpiro","Box","my","md","display","gap","flexWrap","CustomModal","title","PipeList","header","pipeObject","spiro","maxWidth","tabs","component","tabIdx","setTabIdx","tabNavOrientation","useMediaQuery","theme","breakpoints","up","Container","CustomTabsNav","orientation","tab","setTab","tabItems","map","idx","TabPanel","key","index","Head"],"sourceRoot":""}