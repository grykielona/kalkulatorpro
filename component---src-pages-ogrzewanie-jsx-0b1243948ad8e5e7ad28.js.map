{"version":3,"file":"component---src-pages-ogrzewanie-jsx-0b1243948ad8e5e7ad28.js","mappings":"8JA2BA,IAjB0B,kBACxB,gBAAC,KAAD,CAAMA,WAAS,GACb,gBAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAAC,IAAD,CAAUC,OAAO,yBAAyBC,WAAYC,EAAAA,MAExD,gBAAC,KAAD,CAAML,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAAC,IAAD,CAAUC,OAAO,2BAA2BC,WAAYE,EAAAA,MAE1D,gBAAC,KAAD,CAAMN,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAAC,IAAD,CAAUC,OAAO,2BAA2BC,WAAYG,EAAAA,MAE1D,gBAAC,KAAD,CAAMP,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAAC,IAAD,CAAUC,OAAO,uBAAuBC,WAAYI,EAAAA,MAZhC,C,uFCNpBC,EAAgB,SAACC,GAAD,MAAoB,UAATA,EAAmB,eAAiB,UAA/C,EAsDtB,IApD0B,SAAC,GAQpB,IAPLC,EAOI,EAPJA,SACAC,EAMI,EANJA,MAMI,IALJC,MAAAA,OAKI,MALI,OAKJ,EAJJC,EAII,EAJJA,QACAC,EAGI,EAHJA,SAGI,IAFJC,aAAAA,OAEI,MAFW,GAEX,MADJC,MAAAA,OACI,SACJ,GAAsCC,EAAAA,EAAAA,UAASF,GAAxCG,EAAP,KAAoBC,EAApB,KACQV,GAASW,EAAAA,EAAAA,sBAATX,KAER,OACE,gBAAC,IAAD,CACEY,GAAI,CACFT,MAAAA,EACA,sBAAuB,CACrBU,MAAOd,EAAcC,IAEvB,2BAA4B,CAC1B,yBAA0B,CACxBc,YAAaf,EAAcC,OAKjC,gBAAC,IAAD,CAAYe,QAAM,EAACC,GAAIZ,GACpBF,GAEH,gBAAC,IAAD,CAEEe,SAAO,EACPC,KAAK,QACLd,QAASA,EACTe,MAAOV,EACPP,MAAOA,EACPG,SAAU,SAACe,GACT,IAAMC,EAAMD,EAAEE,OAAOH,MACrBT,EAAeW,GACfhB,EAASgB,EACV,GAEApB,aAbH,EAaGA,EAAUsB,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,UAAd,OACb,gBAAC,IAAD,CAAUlB,MAAOA,EAAOmB,IAAQD,EAAL,IAAkBD,EAAaL,MAAOK,GAC9DC,EAFU,KAQtB,C,gICxDM,IAAME,EAAc,CACzB,CAAEF,UAAW,OAAQD,UAAW,KAChC,CAAEC,UAAW,0BAA2BD,UAAW,MACnD,CAAEC,UAAW,0BAA2BD,UAAW,MACnD,CAAEC,UAAW,0BAA2BD,UAAW,MACnD,CAAEC,UAAW,0BAA2BD,UAAW,MAGxCI,EAAgB,CAC3B,CAAEH,UAAW,yBAA0BD,UAAW,KAClD,CAAEC,UAAW,yBAA0BD,UAAW,IAClD,CAAEC,UAAW,0BAA2BD,UAAW,SACnD,CAAEC,UAAW,0BAA2BD,UAAW,SACnD,CAAEC,UAAW,sBAAuBD,UAAW,SAC/C,CAAEC,UAAW,8BAA+BD,UAAW,MAK5CK,EAAiB,CAC5B,CAAEJ,UAAW,qBAAsBD,UAAW,GAC9C,CAAEC,UAAW,oCAAqCD,UAAW,GAC7D,CAAEC,UAAW,UAAWD,UAAW,GACnC,CAAEC,UAAW,gBAAiBD,UAAW,GACzC,CAAEC,UAAW,YAAaD,UAAW,GACrC,CAAEC,UAAW,UAAWD,UAAW,IAExBM,EAAY,CACvB,CAAEL,UAAW,OAAQD,UAAW,KAChC,CAAEC,UAAW,MAAOD,UAAW,IAC/B,CAAEC,UAAW,OAAQD,UAAW,KAChC,CAAEC,UAAW,MAAOD,UAAW,GAC/B,CAAEC,UAAW,MAAOD,UAAW,KAC/B,CAAEC,UAAW,MAAOD,UAAW,KAC/B,CAAEC,UAAW,MAAOD,UAAW,GAC/B,CAAEC,UAAW,MAAOD,UAAW,KAC/B,CAAEC,UAAW,KAAMD,UAAW,IAC9B,CAAEC,UAAW,KAAMD,UAAW,IAC9B,CAAEC,UAAW,KAAMD,UAAW,IAC9B,CAAEC,UAAW,KAAMD,UAAW,IAC9B,CAAEC,UAAW,KAAMD,UAAW,IAC9B,CAAEC,UAAW,MAAOD,UAAW,KAC/B,CAAEC,UAAW,MAAOD,UAAW,KAC/B,CAAEC,UAAW,MAAOD,UAAW,KAC/B,CAAEC,UAAW,MAAOD,UAAW,KAC/B,CAAEC,UAAW,MAAOD,UAAW,K,kLC7CpBO,EAAwB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAClCA,EAAKC,MAAK,SAACC,GAAD,MAAiB,KAARA,GAAsB,MAARA,GAAuB,IAARA,CAAtC,GADwB,EAGxBC,EAAgB,SAACC,GAAD,MAAsB,KAAVA,EAAe,GAAKC,OAAOD,EAAvC,ECGvBE,EAAU,CAAEC,GAAI,EAAGC,GAAI,GACvBC,EAAc,CAAEC,SAAU,SAAUC,cAAe,YAAaC,GAAI,EAAGC,GAAI,GAoHjF,EAlHoB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACrB,GAA4CtC,EAAAA,EAAAA,UAAS,IAA9CuC,EAAP,KAAuBC,EAAvB,KACA,GAAoDxC,EAAAA,EAAAA,UAAS,IAAtDyC,EAAP,KAA2BC,EAA3B,KACA,GAAgC1C,EAAAA,EAAAA,UAAS,IAAlC2C,EAAP,KAAiBC,EAAjB,KACA,GAAgC5C,EAAAA,EAAAA,UAAS,IAAlC6C,EAAP,KAAiBC,EAAjB,KACA,GAA4B9C,EAAAA,EAAAA,UAAS,CAAE+C,QAAQ,EAAOC,aAAa,EAAOC,SAAS,IAA5EC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAI7B,EAAsBgB,EAAgBI,EAAUF,GAApD,CACE,IAAMO,EAAcK,EAAAA,GAA4BZ,EAAoBF,GAC9DU,EAAUI,EAAAA,GAAgBL,EAAaL,GAC7CQ,EAAU,CAAEJ,QAAQ,EAAOC,YAAAA,EAAaC,QAAAA,GAGzC,MACDE,EAAU,CAAEJ,QAAQ,EAAOC,aAAa,EAAOC,SAAS,GACzD,GAAE,CAACV,EAAgBE,EAAoBE,IAkBxC,OACE,gCACE,gBAACW,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,IACb,gBAACwE,EAAA,EAAD,CAAOC,UAAW,EAAGpD,GAAI0B,GACvB,gBAAC2B,EAAA,EAAD,CAAYrD,GAAI6B,GAAhB,wBACA,gBAACqB,EAAA,GAAD,CAAMzE,WAAS,EAAC6E,QAAS,GACvB,gBAACJ,EAAA,GAAD,CAAMvE,GAAI,EAAGC,GAAI,EAAGF,MAAI,GACtB,gBAAC6E,EAAA,EAAD,CACE9D,SAxBqB,SAACe,GAClC4B,EAAkBa,EAAAA,GAAuB1B,EAAcf,IACxD,EAuBaD,MAAO4B,EACP7C,MAAM,qBAGV,gBAAC4D,EAAA,GAAD,CAAMvE,GAAI,EAAGC,GAAI,EAAGF,MAAI,GACtB,gBAAC6E,EAAA,EAAD,CACEC,eAAa,EACbjD,MAAO8B,EACP5C,SA9ByB,SAACe,GACtC0B,EAAgBX,EAAcf,IAC9B8B,EAAsBf,EAAcf,GACrC,EA4BalB,MAAM,wBAGV,gBAAC4D,EAAA,GAAD,CAAMvE,GAAI,EAAGC,GAAI,IAAKF,MAAI,GACxB,gBAAC6E,EAAA,EAAD,CACEC,eAAa,EACbjD,MAAOgC,EACP9C,SAlCe,SAACe,GAC5BkC,EAAYO,EAAAA,GAAezC,IAC3BgC,EAAYjB,EAAcf,GAC3B,EAgCalB,MAAM,mBAGV,gBAAC4D,EAAA,GAAD,CAAMlD,GAAI,CAAEyD,UAAW,UAAY/E,MAAI,EAACC,GAAI,EAAGC,GAAI,GACjD,gBAACyE,EAAA,EAAD,CAAYK,QAAQ,QAAQ1D,GAAI,CAAEiC,GAAI,MAAtC,QAIF,gBAACiB,EAAA,GAAD,CAAMvE,GAAI,EAAGC,GAAI,IAAKF,MAAI,GACxB,gBAAC6E,EAAA,EAAD,CACEC,eAAa,EACbjD,MAAOkC,EACPhD,SA3Ce,SAACe,GAC5BgC,EAAYS,EAAAA,GAAezC,IAC3BkC,EAAYnB,EAAcf,GAC3B,EAyCalB,MAAM,uBAMfwD,EAAOF,aACN,gBAACM,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,IACb,gBAACwE,EAAA,EAAD,CAAOC,UAAW,EAAGpD,GAAI0B,GACvB,gBAAC2B,EAAA,EAAD,CAAYK,QAAQ,SAApB,oBACoBvB,EADpB,oBACqDI,EADrD,KACgE,gCADhE,gBAGE,gBAACc,EAAA,EAAD,CAAYM,UAAU,OAAOD,QAAQ,SACnC,8BACG,IADH,KAEI,mCAFJ,MAEuBT,EAAAA,GAAmBH,EAAOD,QAAS,IAChD,KAPd,IASG,gCATH,UAUE,gBAACQ,EAAA,EAAD,CAAYM,UAAU,OAAOD,QAAQ,SACnC,8BACG,IADH,KAEI,mCAFJ,MAEuBT,EAAAA,GAAmBH,EAAOF,YAAa,GAAI,MAbtE,SAqBLE,EAAOH,QACN,gBAACO,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,IACb,gBAACwE,EAAA,EAAD,CAAOC,UAAW,EAAGpD,GAAI0B,GACvB,gBAAC2B,EAAA,EAAD,CAAYK,QAAQ,SAASZ,EAAOH,UAM/C,E,oBCjHKjB,EAAU,CAAEC,GAAI,EAAGC,GAAI,GACvBC,EAAc,CAAEC,SAAU,SAAUC,cAAe,YAAaC,GAAI,EAAGC,GAAI,GAgHjF,EA9G0B,SAAC,GAA4B,IAA1B2B,EAAyB,EAAzBA,mBAC3B,GAA8BhE,EAAAA,EAAAA,UAAS,IAAhCiD,EAAP,KAAgBgB,EAAhB,KACA,GAAgCjE,EAAAA,EAAAA,UAAS,IAAlC2C,EAAP,KAAiBC,EAAjB,KACA,GAAgC5C,EAAAA,EAAAA,UAAS,IAAlC6C,EAAP,KAAiBC,EAAjB,KACA,GAA4B9C,EAAAA,EAAAA,UAAS,CAAE+C,QAAQ,EAAOmB,cAAc,IAA7DhB,EAAP,KAAeC,EAAf,MACAC,EAAAA,EAAAA,YAAU,WACR,GAAI7B,EAAsB0B,EAASN,GAAW,CAC5C,IAAMK,EAAcK,EAAAA,GAA0BJ,EAASN,GASvD,OANIQ,EADJH,GAAe,KACD,CAAED,QAAQ,EAAOmB,aAAcb,EAAAA,GAAmBL,EAAa,IAC/D,CACRD,OAAQ,sCACRmB,cAAc,SAEpBF,EAAmBX,EAAAA,GAAmBL,EAAa,GAEpD,CACDgB,EAAmB,IACnBb,EAAU,CAAEJ,QAAQ,EAAOmB,cAAc,GAC1C,GAAE,CAACjB,EAASN,IAcb,OACE,gCACE,gBAACW,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,IACb,gBAACwE,EAAA,EAAD,CAAOC,UAAW,EAAGpD,GAAI0B,GACvB,gBAAC2B,EAAA,EAAD,CAAYrD,GAAI6B,GAAhB,+BACA,gBAACqB,EAAA,GAAD,CAAMzE,WAAS,EAAC6E,QAAS,GACvB,gBAACJ,EAAA,GAAD,CAAMvE,GAAI,GAAIoF,IAAK,EAAGrF,MAAI,GACxB,gBAACsF,EAAA,EAAD,CACEtE,aAAcmD,EACdvD,MAAM,kBACNE,QAAQ,YACRH,SAAU6B,EAAAA,GACVvB,OAAK,EACLF,SAAU,SAACe,IAzBE,SAACA,GAC1BqD,EAAWtC,EAAcf,GAC1B,CAwBeyD,CAAmBzD,EACpB,KASL,gBAAC0C,EAAA,GAAD,CAAMvE,GAAI,EAAGoF,IAAK,EAAGrF,MAAI,GACvB,gBAAC6E,EAAA,EAAD,CACEC,eAAa,EACbjD,MAAOgC,EACP9C,SArCe,SAACe,GAC5BkC,EAAYO,EAAAA,GAAezC,IAC3BgC,EAAYjB,EAAcf,GAC3B,EAmCalB,MAAM,mBAGV,gBAAC4D,EAAA,GAAD,CAAMlD,GAAI,CAAEyD,UAAW,UAAY/E,MAAI,EAACC,GAAI,EAAGoF,IAAK,GAClD,gBAACV,EAAA,EAAD,CAAYK,QAAQ,QAAQ1D,GAAI,CAAEiC,GAAI,MAAtC,QAIF,gBAACiB,EAAA,GAAD,CAAMvE,GAAI,EAAGoF,IAAK,EAAGrF,MAAI,GACvB,gBAAC6E,EAAA,EAAD,CACEC,eAAa,EACbjD,MAAOkC,EACPhD,SA9Ce,SAACe,GAC5BgC,EAAYS,EAAAA,GAAezC,IAC3BkC,EAAYnB,EAAcf,GAC3B,EA4CalB,MAAM,uBAMfwD,EAAOgB,cACN,gBAACZ,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,IACb,gBAACwE,EAAA,EAAD,CAAOC,UAAW,EAAGpD,GAAI0B,GACvB,gBAAC2B,EAAA,EAAD,CAAYK,QAAQ,SAApB,+CAC+CnB,EAD/C,KAC0D,gCAD1D,cAEE,gBAACc,EAAA,EAAD,CAAYM,UAAU,OAAOD,QAAQ,SACnC,kCAAUZ,EAAOgB,cAAuB,KAH5C,QAME,gBAACT,EAAA,EAAD,CAAYM,UAAU,OAAOD,QAAQ,SACnC,kCAAUT,EAAAA,GAAyC,IAAtBH,EAAOgB,aAAoB,GAAxD,MAPJ,SAcLhB,EAAOH,QACN,gBAACO,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,IACb,gBAACwE,EAAA,EAAD,CAAOC,UAAW,EAAGpD,GAAI0B,GACvB,gBAAC2B,EAAA,EAAD,CAAYK,QAAQ,SAASZ,EAAOH,UAM/C,ECjHKjB,EAAU,CAAEC,GAAI,EAAGC,GAAI,GACvBC,EAAc,CAAEC,SAAU,SAAUC,cAAe,YAAaC,GAAI,EAAGC,GAAI,GA6BjF,EA3BsB,WACpB,OAAwCrC,EAAAA,EAAAA,UAAS,IAA1CsE,EAAP,KAAqBhC,EAArB,KACA,GAA8CtC,EAAAA,EAAAA,UAAS,IAAhDuE,EAAP,KAAwBP,EAAxB,KAEMQ,GAAeC,EAAAA,EAAAA,IAAcF,GAAmBA,EAAkBD,GAAe,GACjFI,EAAoC,IAAjBF,GAAsBF,GAAgBC,EAE/D,OACE,gBAACjB,EAAA,GAAD,CAAMzE,WAAS,EAAC6E,QAAS,GACvB,gBAAC,EAAD,CAAapB,gBAAiBA,IAC9B,gBAAC,EAAD,CAAmB0B,mBAAoBA,IAEtCU,GACC,gBAACpB,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,IACb,gBAACwE,EAAA,EAAD,CAAOC,UAAW,EAAGpD,GAAI0B,GACvB,gBAAC2B,EAAA,EAAD,CAAYrD,GAAI6B,GAAhB,2BACA,gBAACwB,EAAA,EAAD,CAAYK,QAAQ,SAApB,4BAC4BQ,EAD5B,6CAGA,gBAACb,EAAA,EAAD,KAAae,EAAb,UAMX,E,oBCzBK1C,EAAU,CAAEC,GAAI,EAAGC,GAAI,GACvBC,EAAc,CAAEC,SAAU,SAAUC,cAAe,YAAaC,GAAI,EAAGC,GAAI,GAG3EsC,EAAc,cACdC,EAAa,aA0KnB,EAxKoB,WAClB,OAAwB5E,EAAAA,EAAAA,UAAS,IAA1B6E,EAAP,KAAaC,EAAb,KACA,GAA0B9E,EAAAA,EAAAA,UAAS,IAA5B+E,EAAP,KAAcC,EAAd,KACA,GAAkChF,EAAAA,EAAAA,UAAS,IAApCiF,EAAP,KAAkBC,EAAlB,KACA,GAAgClF,EAAAA,EAAAA,UAAS,IAAlC2C,EAAP,KAAiBC,EAAjB,KACA,GAAgC5C,EAAAA,EAAAA,UAAS,IAAlC6C,EAAP,KAAiBC,EAAjB,KACA,GAAgC9C,EAAAA,EAAAA,UAAS,KAAlCmF,EAAP,KAAiBC,EAAjB,KACA,GAAsCpF,EAAAA,EAAAA,UAAS,KAAxCqF,EAAP,KAAoBC,EAApB,KACA,GAA8BtF,EAAAA,EAAAA,UAAS,MAAhCuF,EAAP,KAAgBC,EAAhB,KACA,GAAgCxF,EAAAA,EAAAA,UAAS,IAAlCyF,EAAP,KAAiBC,EAAjB,MAEAtC,EAAAA,EAAAA,YAAU,WAKRoC,EAJiB,KAAb7C,GAA4B,KAATkC,EAIZxB,EAAAA,GAA+B8B,EAAUxC,EAAUkC,EAAMQ,GAHvD,KAId,GAAE,CAACR,EAAMlC,EAAUE,EAAUsC,EAAUE,KAExCjC,EAAAA,EAAAA,YAAU,WACR,GAAIqC,IAAab,EAAjB,CACA,GAAc,KAAVG,GAA0B,IAAVA,GAA6B,KAAdE,GAAkC,IAAdA,EAIrD,OAHAO,EAAW,MACX5C,EAAY,SACZE,EAAY,IAGd,IAAM6C,EAAOtC,EAAAA,GACXA,EAAAA,GAAyB4B,EAAWF,EAAOM,EAAaR,GACxD,GAEFjC,EAAY+C,GACZ7C,EAAYO,EAAAA,GAAesC,GAZQ,CAapC,GAAE,CAACZ,EAAOE,EAAWI,IA6BtB,OACE,gBAAC/B,EAAA,GAAD,CAAMzE,WAAS,EAAC6E,QApEC,GAqEf,gBAACJ,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,IACb,gBAACwE,EAAA,EAAD,CAAOC,UAAW,EAAGpD,GAAI0B,GACvB,gBAAC2B,EAAA,EAAD,CAAYrD,GAAI6B,GAAhB,kBACA,gBAACqB,EAAA,GAAD,CAAMzE,WAAS,EAAC6E,QAxEL,GAyET,gBAACJ,EAAA,GAAD,CAAMzE,WAAS,EAAC6E,QAzEP,EAyE8B5E,MAAI,EAACC,GAAI,GAAI6G,GAAI,GACtD,gBAACtC,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,GACb,gBAACqF,EAAA,EAAD,CACEtE,aAAcuF,EACd3F,MAAM,kBACNE,QAAQ,gBACRH,SAAU0B,EAAAA,GACVtB,SAAU,SAACe,GACT0E,EAAe1E,EAChB,KAGL,gBAAC0C,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,GACb,gBAAC4E,EAAA,EAAD,CACEjE,MAAM,oBACNiB,MAAOkE,EACPhF,SAzBS,SAACe,GACxBkE,EAAQzB,EAAAA,GAAkBzC,GAC3B,EAwBeiF,WAAYhB,EAAO,GAAK,wBAI9B,gBAACvB,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,GAAI6G,GAAI,GACrB,gBAACxB,EAAA,EAAD,CACEtE,aAAc,IACdJ,MAAM,cACNE,QAAQ,eACRH,SAAU2B,EAAAA,GACVvB,SAAU,SAACe,GACTwE,EAAYxE,EACb,QAMX,gBAAC0C,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,GAAI6G,GAAI,GACrB,gBAACrC,EAAA,EAAD,CAAOC,UAAW,EAAGpD,GAAI0B,GACvB,gBAAC2B,EAAA,EAAD,CAAYrD,GAAI6B,GAAhB,2BACA,gBAACqB,EAAA,GAAD,CAAMzE,WAAS,EAAC6E,QA/GL,GAgHT,gBAACJ,EAAA,GAAD,CAAMvE,GAAI,EAAGD,MAAI,GACf,gBAAC6E,EAAA,EAAD,CAAiBhD,MAAOoE,EAAOlF,SA7DjB,SAACe,GACzB8E,EAAYf,GACZK,EAASpE,EACV,EA0DuElB,MAAM,YAEpE,gBAAC4D,EAAA,GAAD,CAAMvE,GAAI,EAAGD,MAAI,GACf,gBAAC6E,EAAA,EAAD,CACEhD,MAAOsE,EACPpF,SA7DgB,SAACe,GAC7ByC,EAAAA,GAAkBzC,EAAG,GAAI,IACzB8E,EAAYf,GACZ/B,EAAYS,EAAAA,GAAmBA,EAAAA,GAAyBzC,EAAGmE,EAAOM,EAAaR,GAAO,IACtFK,EAAa7B,EAAAA,GAAkBzC,EAAG,GAAI,IACvC,EAyDalB,MAAM,mBACNmG,WAAYJ,IAAad,GAAgBM,EAAoC,GAAxB,4BAM/D,gBAAC3B,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,GAAI6G,GAAI,GACrB,gBAACrC,EAAA,EAAD,CAAOC,UAAW,EAAGpD,GAAI0B,GACvB,gBAAC2B,EAAA,EAAD,CAAYrD,GAAI6B,GAAhB,gCACA,gBAACqB,EAAA,GAAD,CAAMzE,WAAS,EAAC6E,QAjIL,GAkIT,gBAACJ,EAAA,GAAD,CAAMvE,GAAI,EAAGD,MAAI,GACf,gBAAC6E,EAAA,EAAD,CAAiBhD,MAAOgC,EAAU9C,SA3FrB,SAACe,GACxB8E,EAAYd,GACZ9B,EAAYO,EAAAA,GAAezC,IAC3BgC,EAAYhC,EACb,EAuFyElB,MAAM,mBAEtE,gBAAC4D,EAAA,GAAD,CAAMvE,GAAI,EAAGD,MAAI,GACf,gBAAC6E,EAAA,EAAD,CACEhD,MAAOkC,EACPhD,SA1FW,SAACe,GACxB8E,EAAYd,GACZhC,EAAYS,EAAAA,GAAezC,IAC3BkC,EAAYlC,EACb,EAuFalB,MAAM,uBAMhB,gBAACoG,EAAA,EAAD,CAAaP,QAASA,IACrBA,GACC,gBAACjC,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,IACb,gBAACwE,EAAA,EAAD,CAAOC,UAAW,EAAGpD,GAAI0B,GACvB,gBAAC2B,EAAA,EAAD,CAAYrD,GAAE,iBAAO6B,EAAP,CAAoBG,GAAI,KAAtC,UAECqD,IAAab,GACZ,gBAACnB,EAAA,EAAD,CAAYK,QAAQ,SAApB,gBAEE,kCAAanB,EAAb,WAAgCE,EAAhC,WAFF,YAMD4C,IAAad,GACZ,gBAAClB,EAAA,EAAD,CAAYK,QAAQ,SAApB,WAGE,kCAAaiB,EAAb,SAHF,OAIE,kCAAaE,EAAb,OAJF,YAQF,gBAACc,EAAA,EAAD,CAAYR,QAASA,MAMhC,E,wCCnED,EA9GoB,kBAClB,gBAACS,EAAA,EAAD,CAAK5F,GAAI,CAAE6F,GAAI,CAAElH,GAAI,EAAG6G,GAAI,GAAKM,QAAS,OAAQC,IAAK,EAAGC,SAAU,SAClE,gBAACC,EAAA,EAAD,CAAa3G,MAAM,cAAc4G,MAAM,mBACrC,gBAACC,EAAA,EAAD,OAEF,gBAACF,EAAA,EAAD,CAAaG,SAAS,KAAK9G,MAAM,QAAQ4G,MAAM,cAC7C,gBAAChD,EAAA,GAAD,CAAMzE,WAAS,EAAC6E,QAAS,GACvB,gBAACJ,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,GAAI6G,GAAI,EAAGxF,GAAI,CAAEqG,GAAI,IAClC,gBAAChD,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,MAA3B,wBAGA,gBAACL,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,SAA3B,iHAIA,gBAACL,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,SAA3B,iHAIA,gBAACL,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,SAA3B,2GAIA,gBAACL,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,SAA3B,oEAGA,gBAACL,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,SAA3B,iIAIA,gBAACL,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,SAA3B,yEAGA,gBAACL,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,SAA3B,gJAIA,gBAACL,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,SAA3B,6HAKF,gBAAC4C,EAAA,EAAD,CACEtG,GAAI,CAAEuG,IAAK,EAAGT,QAAS,CAAEnH,GAAI,OAAQ6G,GAAI,YACzCgB,YAAY,WACZC,UAAQ,IAEV,gBAACvD,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,GAAI6G,GAAI,GACrB,gBAACnC,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,MAA3B,sBAGA,gBAACL,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,SAA3B,mQAKA,gBAACL,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,SAA3B,4GAIA,gBAACL,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,SAA3B,uKAIA,gBAACL,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,SAA3B,2HAIA,gBAACL,EAAA,EAAD,CAAYrB,GAAI,EAAG0B,QAAQ,SAA3B,0EAMN,gBAACuC,EAAA,EAAD,CAAaG,SAAS,KAAK9G,MAAM,SAAS4G,MAAM,UAC9C,gBAAC7C,EAAA,EAAD,CAAYrB,GAAI,GAAhB,0EAGA,gBAACqB,EAAA,EAAD,CAAYrB,GAAI,GAAhB,uHAIA,gBAACqB,EAAA,EAAD,CAAYrB,GAAI,GAAhB,uIAIA,gBAACqB,EAAA,EAAD,CAAYrB,GAAI,GAAhB,mBACkB,2BADlB,qBAGA,gBAACqB,EAAA,EAAD,CAAYrB,GAAI,GACd,+CADF,+eAQA,gBAACqB,EAAA,EAAD,CAAYrB,GAAI,GACd,6CADF,umBAjGc,E,6BCId0E,EAAO,CACX,CAAEpH,MAAO,WAAYqE,UAAW,gBAAC,EAAD,OAChC,CAAErE,MAAO,mBAAoBqE,UAAW,gBAAC,EAAD,QAgC1C,EA7BoB,WAClB,OAA4B/D,EAAAA,EAAAA,UAAS,GAA9B+G,EAAP,KAAeC,EAAf,KAEMC,GADUC,EAAAA,EAAAA,IAAc,SAACC,GAAD,OAAWA,EAAMC,YAAYC,GAAG,KAAhC,IACM,WAAa,aAEjD,OACE,gBAACC,EAAA,EAAD,CAAWlH,GAAI,CAAEiC,GAAI,EAAGL,GAAI,GAAKwE,SAAS,MACxC,gBAAClD,EAAA,GAAD,CAAMzE,WAAS,EAAC6E,QAAS,GACvB,gBAACJ,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,GAAI6G,GAAI,GACrB,gBAAC2B,EAAA,EAAD,CACEX,YAAaK,EACbO,IAAKT,EACLU,OAAQT,EACRU,SAAUZ,KAGd,gBAACxD,EAAA,GAAD,CAAMxE,MAAI,EAACC,GAAI,GAAI6G,GAAI,IACpBkB,EAAK/F,KAAI,SAACyG,EAAKG,GAAN,OACR,gBAACC,EAAA,EAAD,CAAU1G,IAAKsG,EAAI9H,MAAOmI,MAAOF,EAAKhH,MAAOoG,GAC1CS,EAAIzD,UAFC,IAKV,gBAAC,EAAD,QAKT,EAIY+D,EAAO,kBAAM,gBAAC,IAAD,CAAKxB,MAAM,cAAjB,C","sources":["webpack://kalkulatorpro/./src/components/Informations/PipeListContainer.jsx","webpack://kalkulatorpro/./src/components/Inputs/CustomSelectField.jsx","webpack://kalkulatorpro/./src/helpers/enums.js","webpack://kalkulatorpro/./src/helpers/conditions.js","webpack://kalkulatorpro/./src/components/Heating/AuthValveCalc/ValveKvCalc.jsx","webpack://kalkulatorpro/./src/components/Heating/AuthValveCalc/ValvePressureDrop.jsx","webpack://kalkulatorpro/./src/components/Heating/AuthValveCalc/AuthValveCalc.jsx","webpack://kalkulatorpro/./src/components/Heating/HeatingCalc/HeatingCalc.jsx","webpack://kalkulatorpro/./src/components/Heating/HeatingInfo/HeatingInfo.jsx","webpack://kalkulatorpro/./src/pages/ogrzewanie.jsx"],"sourcesContent":["import { Grid } from '@mui/material'\nimport React from 'react'\nimport {\n  pexPipesDiameters,\n  ppPipesDiametersPN16,\n  ppPipesDiametersPN20,\n  steelPipesDiameters,\n} from '../../helpers/pipes'\nimport PipeList from './PipeList'\n\nconst PipeListContainer = () => (\n  <Grid container>\n    <Grid item xs={12} sm={6}>\n      <PipeList header=\"Rury stalowe - DN | Dw\" pipeObject={steelPipesDiameters} />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      <PipeList header=\"Rury PP PN20 Dz x g | Dw\" pipeObject={ppPipesDiametersPN20} />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      <PipeList header=\"Rury PP PN16 Dz x g | Dw\" pipeObject={ppPipesDiametersPN16} />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      <PipeList header=\"Rury Pex Dz x g | Dw\" pipeObject={pexPipesDiameters} />\n    </Grid>\n  </Grid>\n)\n\nexport default PipeListContainer\n","import { FormControl, InputLabel, MenuItem, Select } from '@mui/material'\nimport React, { useState } from 'react'\nimport { useDarkModeContext } from '../Layout/Layout'\n\nconst focusedColors = (mode) => (mode === 'light' ? 'primary.main' : 'grey.300')\n\nconst CustomSelectField = ({\n  menuItem,\n  label,\n  width = '100%',\n  labelId,\n  onChange,\n  defaultValue = '',\n  dense = false,\n}) => {\n  const [selectValue, setSelectValue] = useState(defaultValue)\n  const { mode } = useDarkModeContext()\n\n  return (\n    <FormControl\n      sx={{\n        width,\n        '& label.Mui-focused': {\n          color: focusedColors(mode),\n        },\n        '& .MuiOutlinedInput-root': {\n          '&.Mui-focused fieldset': {\n            borderColor: focusedColors(mode),\n          },\n        },\n      }}\n    >\n      <InputLabel shrink id={labelId}>\n        {label}\n      </InputLabel>\n      <Select\n        // @ts-ignore\n        notched\n        size=\"small\"\n        labelId={labelId}\n        value={selectValue}\n        label={label}\n        onChange={(e) => {\n          const val = e.target.value\n          setSelectValue(val)\n          onChange(val)\n        }}\n      >\n        {menuItem?.map(({ itemValue, itemLabel }) => (\n          <MenuItem dense={dense} key={`${itemLabel}-${itemValue}`} value={itemValue}>\n            {itemLabel}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default CustomSelectField\n","export const mediumTypes = [\n  { itemLabel: 'Woda', itemValue: 4.2 },\n  { itemLabel: 'Glik. etyl. 35% (-20°C)', itemValue: 3.63 },\n  { itemLabel: 'Glik. etyl. 40% (-25°C)', itemValue: 3.54 },\n  { itemLabel: 'Glik. prop. 37% (-20°C)', itemValue: 3.77 },\n  { itemLabel: 'Glik. prop. 42% (-25°C)', itemValue: 3.7 },\n]\n\nexport const pipeRoughness = [\n  { itemLabel: 'Rury stalowe k=0,15 mm', itemValue: 0.15 },\n  { itemLabel: 'Rury stalowe k=0,10 mm', itemValue: 0.1 },\n  { itemLabel: 'Rury PP PN16 k=0,007 mm', itemValue: 0.007001 },\n  { itemLabel: 'Rury PP PN20 k=0,007 mm', itemValue: 0.007002 },\n  { itemLabel: 'Rury Pex k=0,007 mm', itemValue: 0.007003 },\n  { itemLabel: 'Rury żeliwne nowe k=0,25 mm', itemValue: 0.25 },\n]\n\n// TODO Copper pipes k=0.0015,\n\nexport const typeOfBuilding = [\n  { itemLabel: 'Budynki mieszkalne', itemValue: 1 },\n  { itemLabel: 'Budynki biurowe i administracyjne', itemValue: 2 },\n  { itemLabel: 'Hotele ', itemValue: 3 },\n  { itemLabel: 'Domy towarowe', itemValue: 4 },\n  { itemLabel: 'Szpitale ', itemValue: 5 },\n  { itemLabel: 'Szkoły ', itemValue: 6 },\n]\nexport const kvsValves = [\n  { itemLabel: '0,25', itemValue: 0.25 },\n  { itemLabel: '0,4', itemValue: 0.4 },\n  { itemLabel: '0,63', itemValue: 0.63 },\n  { itemLabel: '1,0', itemValue: 1 },\n  { itemLabel: '1,6', itemValue: 1.6 },\n  { itemLabel: '2,5', itemValue: 2.5 },\n  { itemLabel: '4,0', itemValue: 4 },\n  { itemLabel: '6,3', itemValue: 6.3 },\n  { itemLabel: '10', itemValue: 10 },\n  { itemLabel: '16', itemValue: 16 },\n  { itemLabel: '25', itemValue: 25 },\n  { itemLabel: '40', itemValue: 40 },\n  { itemLabel: '63', itemValue: 63 },\n  { itemLabel: '100', itemValue: 100 },\n  { itemLabel: '150', itemValue: 150 },\n  { itemLabel: '250', itemValue: 250 },\n  { itemLabel: '400', itemValue: 400 },\n  { itemLabel: '630', itemValue: 630 },\n]\n","export const shouldCalculateInputs = (...args) =>\n  !args.some((arg) => arg === '' || arg === '0' || arg === 0)\n\nexport const transformInpt = (input) => (input === '' ? '' : Number(input))\n","import { Grid, Paper, Typography } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport CustomTextField from '../../Inputs/CustomTextField'\nimport * as Calc from '../../../helpers/physicalCalculations'\nimport { shouldCalculateInputs, transformInpt } from '../../../helpers/conditions'\n\nconst paperSX = { py: 1, px: 2 }\nconst typograhySX = { fontSize: '0.8rem', textTransform: 'uppercase', mb: 2, mt: 1 }\n\nconst ValveKvCalc = ({ setSystemPrDrop }) => {\n  const [valveAuthority, setValveAuthority] = useState(0.5)\n  const [systemPressureDrop, setSystemPressureDrop] = useState('')\n  const [flowCMPH, setFlowCMPH] = useState('')\n  const [flowCDPS, setFlowCDPS] = useState('')\n  const [result, setResult] = useState({ errMsg: false, valvePrDrop: false, valveKv: false })\n\n  useEffect(() => {\n    if (shouldCalculateInputs(valveAuthority, flowCMPH, systemPressureDrop)) {\n      const valvePrDrop = Calc.getValvePrDropFromAuth(systemPressureDrop, valveAuthority)\n      const valveKv = Calc.getValveKv(valvePrDrop, flowCMPH)\n      setResult({ errMsg: false, valvePrDrop, valveKv })\n\n      return\n    }\n    setResult({ errMsg: false, valvePrDrop: false, valveKv: false })\n  }, [valveAuthority, systemPressureDrop, flowCMPH])\n\n  const handleValveAuthorityChange = (e) => {\n    setValveAuthority(Calc.validateValveAuth(transformInpt(e)))\n  }\n  const handleSystemPressureDropChange = (e) => {\n    setSystemPrDrop(transformInpt(e))\n    setSystemPressureDrop(transformInpt(e))\n  }\n  const handleFlowCMPHChange = (e) => {\n    setFlowCDPS(Calc.cmphToLps(e))\n    setFlowCMPH(transformInpt(e))\n  }\n  const handleFlowCDPSChange = (e) => {\n    setFlowCMPH(Calc.lpsToCmph(e))\n    setFlowCDPS(transformInpt(e))\n  }\n\n  return (\n    <>\n      <Grid item xs={12}>\n        <Paper elevation={2} sx={paperSX}>\n          <Typography sx={typograhySX}>Obliczenie kv zaworu</Typography>\n          <Grid container spacing={1}>\n            <Grid xs={6} sm={3} item>\n              <CustomTextField\n                onChange={handleValveAuthorityChange}\n                value={valveAuthority}\n                label=\"Autoryt. zaworu\"\n              />\n            </Grid>\n            <Grid xs={6} sm={3} item>\n              <CustomTextField\n                selectOnFocus\n                value={systemPressureDrop}\n                onChange={handleSystemPressureDropChange}\n                label=\"Opory obiegu [bar]\"\n              />\n            </Grid>\n            <Grid xs={5} sm={2.5} item>\n              <CustomTextField\n                selectOnFocus\n                value={flowCMPH}\n                onChange={handleFlowCMPHChange}\n                label=\"Przepływ m3/h\"\n              />\n            </Grid>\n            <Grid sx={{ textAlign: 'center' }} item xs={2} sm={1}>\n              <Typography variant=\"body2\" sx={{ mt: 1.5 }}>\n                Lub\n              </Typography>\n            </Grid>\n            <Grid xs={5} sm={2.5} item>\n              <CustomTextField\n                selectOnFocus\n                value={flowCDPS}\n                onChange={handleFlowCDPSChange}\n                label=\"Przepływ dm3/s\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      {result.valvePrDrop && (\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={paperSX}>\n            <Typography variant=\"body2\">\n              Przy autorytecie {valveAuthority} oraz przepływie {flowCMPH} m<sup>3</sup>/h,\n              obliczono\n              <Typography component=\"span\" variant=\"body1\">\n                <strong>\n                  {' '}\n                  kv<sub>zaw.</sub> = {Calc.roundToDigits(result.valveKv, 2)}\n                </strong>{' '}\n              </Typography>\n              m<sup>3</sup>/h oraz\n              <Typography component=\"span\" variant=\"body1\">\n                <strong>\n                  {' '}\n                  ΔP<sub>zaw.</sub> = {Calc.roundToDigits(result.valvePrDrop, 3)}{' '}\n                </strong>\n              </Typography>\n              bar\n            </Typography>\n          </Paper>\n        </Grid>\n      )}\n      {result.errMsg && (\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={paperSX}>\n            <Typography variant=\"body1\">{result.errMsg}</Typography>\n          </Paper>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default ValveKvCalc\n","import { Grid, Paper, Typography } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport CustomTextField from '../../Inputs/CustomTextField'\nimport * as Calc from '../../../helpers/physicalCalculations'\nimport { shouldCalculateInputs, transformInpt } from '../../../helpers/conditions'\nimport CustomSelectField from '../../Inputs/CustomSelectField'\nimport { kvsValves } from '../../../helpers/enums'\n\nconst paperSX = { py: 1, px: 2 }\nconst typograhySX = { fontSize: '0.8rem', textTransform: 'uppercase', mb: 2, mt: 1 }\n\nconst ValvePressureDrop = ({ setTrueValvePrDrop }) => {\n  const [valveKv, setValveKv] = useState('')\n  const [flowCMPH, setFlowCMPH] = useState('')\n  const [flowCDPS, setFlowCDPS] = useState('')\n  const [result, setResult] = useState({ errMsg: false, resultNumber: false })\n  useEffect(() => {\n    if (shouldCalculateInputs(valveKv, flowCMPH)) {\n      const valvePrDrop = Calc.getValvePrDropFromKv(valveKv, flowCMPH)\n      // eslint-disable-next-line no-unused-expressions\n      valvePrDrop >= 0.0001\n        ? setResult({ errMsg: false, resultNumber: Calc.roundToDigits(valvePrDrop, 4) })\n        : setResult({\n            errMsg: 'Za duzy kvs w stosunku do przepływu',\n            resultNumber: false,\n          })\n      setTrueValvePrDrop(Calc.roundToDigits(valvePrDrop, 4))\n      return\n    }\n    setTrueValvePrDrop('')\n    setResult({ errMsg: false, resultNumber: false })\n  }, [valveKv, flowCMPH])\n\n  const handleValveKvhange = (e) => {\n    setValveKv(transformInpt(e))\n  }\n  const handleFlowCMPHChange = (e) => {\n    setFlowCDPS(Calc.cmphToLps(e))\n    setFlowCMPH(transformInpt(e))\n  }\n  const handleFlowCDPSChange = (e) => {\n    setFlowCMPH(Calc.lpsToCmph(e))\n    setFlowCDPS(transformInpt(e))\n  }\n\n  return (\n    <>\n      <Grid item xs={12}>\n        <Paper elevation={2} sx={paperSX}>\n          <Typography sx={typograhySX}>Spadek ciśnienia na zaworze</Typography>\n          <Grid container spacing={1}>\n            <Grid xs={12} smm={3} item>\n              <CustomSelectField\n                defaultValue={valveKv}\n                label=\"Kvs zaworu m3/h\"\n                labelId=\"kvs-valve\"\n                menuItem={kvsValves}\n                dense\n                onChange={(e) => {\n                  handleValveKvhange(e)\n                }}\n              />\n              {/* <CustomTextField\n                selectOnFocus\n                value={valveKv}\n                onChange={handleValveKvhange}\n                label=\"Kvs zaworu m3/h\"\n              /> */}\n            </Grid>\n            <Grid xs={5} smm={4} item>\n              <CustomTextField\n                selectOnFocus\n                value={flowCMPH}\n                onChange={handleFlowCMPHChange}\n                label=\"Przepływ m3/h\"\n              />\n            </Grid>\n            <Grid sx={{ textAlign: 'center' }} item xs={2} smm={1}>\n              <Typography variant=\"body2\" sx={{ mt: 1.5 }}>\n                Lub\n              </Typography>\n            </Grid>\n            <Grid xs={5} smm={4} item>\n              <CustomTextField\n                selectOnFocus\n                value={flowCDPS}\n                onChange={handleFlowCDPSChange}\n                label=\"Przepływ dm3/s\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      {result.resultNumber && (\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={paperSX}>\n            <Typography variant=\"body2\">\n              Spadek ciśnienia na zaworze przy przepływie {flowCMPH} m<sup>3</sup>/h wyniesie\n              <Typography component=\"span\" variant=\"body1\">\n                <strong> {result.resultNumber}</strong>{' '}\n              </Typography>\n              bar ~\n              <Typography component=\"span\" variant=\"body1\">\n                <strong> {Calc.roundToDigits(result.resultNumber * 100, 2)} </strong>\n              </Typography>\n              kPa\n            </Typography>\n          </Paper>\n        </Grid>\n      )}\n      {result.errMsg && (\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={paperSX}>\n            <Typography variant=\"body1\">{result.errMsg}</Typography>\n          </Paper>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default ValvePressureDrop\n","import { Grid, Paper, Typography } from '@mui/material'\nimport React, { useState } from 'react'\nimport { roundToDigits } from '../../../helpers/physicalCalculations'\nimport ValveKvCalc from './ValveKvCalc'\nimport ValvePressureDrop from './ValvePressureDrop'\n\nconst paperSX = { py: 1, px: 2 }\nconst typograhySX = { fontSize: '0.8rem', textTransform: 'uppercase', mb: 2, mt: 1 }\n\nconst AuthValveCalc = () => {\n  const [systemPrDrop, setSystemPrDrop] = useState('')\n  const [trueValvePrDrop, setTrueValvePrDrop] = useState('')\n\n  const calcTrueAuth = roundToDigits(trueValvePrDrop / (trueValvePrDrop + systemPrDrop), 2)\n  const shouldShowResult = calcTrueAuth !== 0 && systemPrDrop && trueValvePrDrop\n\n  return (\n    <Grid container spacing={1}>\n      <ValveKvCalc setSystemPrDrop={setSystemPrDrop} />\n      <ValvePressureDrop setTrueValvePrDrop={setTrueValvePrDrop} />\n\n      {shouldShowResult && (\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={paperSX}>\n            <Typography sx={typograhySX}>Realny autorytet zaworu</Typography>\n            <Typography variant=\"body2\">\n              Dla oporów w obiegu dP = {systemPrDrop} bar i dobranego zaworu autorytet wynosi:\n            </Typography>\n            <Typography>{calcTrueAuth} [-]</Typography>\n          </Paper>\n        </Grid>\n      )}\n    </Grid>\n  )\n}\n\nexport default AuthValveCalc\n","import { Grid, Paper, Typography } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport { mediumTypes, pipeRoughness } from '../../../helpers/enums'\nimport * as Calc from '../../../helpers/physicalCalculations'\nimport CustomSelectField from '../../Inputs/CustomSelectField'\nimport CustomTextField from '../../Inputs/CustomTextField'\nimport ResultList from '../../Result/ResultList'\nimport TooMuchFlow from '../../Result/TooMuchFlow'\n\nconst paperSX = { py: 1, px: 2 }\nconst typograhySX = { fontSize: '0.8rem', textTransform: 'uppercase', mb: 2, mt: 1 }\nconst GRID_SPACING = 1\n\nconst POWER_INPUT = 'POWER_INPUT'\nconst FLOW_INPUT = 'FLOW_INPUT'\n\nconst HeatingCalc = () => {\n  const [temp, setTemp] = useState(80)\n  const [power, setPower] = useState('')\n  const [deltaTemp, setDeltaTemp] = useState(20)\n  const [flowCMPH, setFlowCMPH] = useState('')\n  const [flowCDPS, setFlowCDPS] = useState('')\n  const [pipeType, setPipeType] = useState(0.15)\n  const [typeOfFluid, setTypeOfFluid] = useState(4.2)\n  const [results, setResults] = useState(null)\n  const [lastCalc, setLastCalc] = useState('')\n\n  useEffect(() => {\n    if (flowCMPH === '' || temp === '') {\n      setResults(null)\n      return\n    }\n    setResults(Calc.getArrayOfPressDropLiquid(pipeType, flowCMPH, temp, typeOfFluid))\n  }, [temp, flowCMPH, flowCDPS, pipeType, typeOfFluid])\n\n  useEffect(() => {\n    if (lastCalc === FLOW_INPUT) return\n    if (power === '' || power === 0 || deltaTemp === '' || deltaTemp === 0) {\n      setResults(null)\n      setFlowCMPH('')\n      setFlowCDPS('')\n      return\n    }\n    const flow = Calc.roundToDigits(\n      Calc.getFlowBasedOnPower(deltaTemp, power, typeOfFluid, temp),\n      3\n    )\n    setFlowCMPH(flow)\n    setFlowCDPS(Calc.cmphToLps(flow))\n  }, [power, deltaTemp, typeOfFluid])\n\n  const handleCMPHChange = (e) => {\n    setLastCalc(FLOW_INPUT)\n    setFlowCDPS(Calc.cmphToLps(e))\n    setFlowCMPH(e)\n  }\n\n  const handleCDPSChange = (e) => {\n    setLastCalc(FLOW_INPUT)\n    setFlowCMPH(Calc.lpsToCmph(e))\n    setFlowCDPS(e)\n  }\n\n  const handlePowerChange = (e) => {\n    setLastCalc(POWER_INPUT)\n    setPower(e)\n  }\n\n  const handleDeltaTempChange = (e) => {\n    Calc.validateTemp(e, 50, 50)\n    setLastCalc(POWER_INPUT)\n    setFlowCMPH(Calc.roundToDigits(Calc.getFlowBasedOnPower(e, power, typeOfFluid, temp), 3))\n    setDeltaTemp(Calc.validateTemp(e, 50, 50))\n  }\n\n  const handleTempChange = (e) => {\n    setTemp(Calc.validateTemp(e))\n  }\n  return (\n    <Grid container spacing={GRID_SPACING}>\n      <Grid item xs={12}>\n        <Paper elevation={2} sx={paperSX}>\n          <Typography sx={typograhySX}>Dane wejściowe</Typography>\n          <Grid container spacing={GRID_SPACING}>\n            <Grid container spacing={GRID_SPACING} item xs={12} md={8}>\n              <Grid item xs={7}>\n                <CustomSelectField\n                  defaultValue={typeOfFluid}\n                  label=\"Rodzaj czynnika\"\n                  labelId=\"type-of-fluid\"\n                  menuItem={mediumTypes}\n                  onChange={(e) => {\n                    setTypeOfFluid(e)\n                  }}\n                />\n              </Grid>\n              <Grid item xs={5}>\n                <CustomTextField\n                  label=\"Temp. czynnika °C\"\n                  value={temp}\n                  onChange={handleTempChange}\n                  helperText={temp ? '' : 'Wpisz temperature'}\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <CustomSelectField\n                defaultValue={0.15}\n                label=\"Rodzaj rury\"\n                labelId=\"type-of-pipe\"\n                menuItem={pipeRoughness}\n                onChange={(e) => {\n                  setPipeType(e)\n                }}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Paper elevation={2} sx={paperSX}>\n          <Typography sx={typograhySX}>Dobór na podstawie mocy</Typography>\n          <Grid container spacing={GRID_SPACING}>\n            <Grid xs={6} item>\n              <CustomTextField value={power} onChange={handlePowerChange} label=\"Moc kW\" />\n            </Grid>\n            <Grid xs={6} item>\n              <CustomTextField\n                value={deltaTemp}\n                onChange={handleDeltaTempChange}\n                label=\"Różnica temp. °C\"\n                helperText={lastCalc === POWER_INPUT && !deltaTemp ? 'Wpisz różnicę temp.' : ''}\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Paper elevation={2} sx={paperSX}>\n          <Typography sx={typograhySX}>Dobór na podstawie przepływu</Typography>\n          <Grid container spacing={GRID_SPACING}>\n            <Grid xs={6} item>\n              <CustomTextField value={flowCMPH} onChange={handleCMPHChange} label=\"Przepływ m3/h\" />\n            </Grid>\n            <Grid xs={6} item>\n              <CustomTextField\n                value={flowCDPS}\n                onChange={handleCDPSChange}\n                label=\"Przepływ dm3/s\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <TooMuchFlow results={results} />\n      {results && (\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={paperSX}>\n            <Typography sx={{ ...typograhySX, mb: 0 }}>Wyniki</Typography>\n\n            {lastCalc === FLOW_INPUT && (\n              <Typography variant=\"body2\">\n                Dla przepływu\n                <strong>{` ${flowCMPH} m3/h ~ ${flowCDPS} dm3/s `}</strong>\n                dobrano:\n              </Typography>\n            )}\n            {lastCalc === POWER_INPUT && (\n              <Typography variant=\"body2\">\n                Dla mocy\n                {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n                <strong>{` ${power} kW  `}</strong>i ΔT\n                <strong>{` ${deltaTemp}°C `}</strong>\n                dobrano:\n              </Typography>\n            )}\n            <ResultList results={results} />\n          </Paper>\n        </Grid>\n      )}\n    </Grid>\n  )\n}\n\nexport default HeatingCalc\n","import { Box, Divider, Grid, Typography } from '@mui/material'\nimport React from 'react'\nimport CustomModal from '../../CustomModal/CustomModal'\nimport PipeListContainer from '../../Informations/PipeListContainer'\n\nconst HeatingInfo = () => (\n  <Box sx={{ my: { xs: 2, md: 4 }, display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n    <CustomModal label=\"TYPOSZEREGI\" title=\"Typoszeregi rur\">\n      <PipeListContainer />\n    </CustomModal>\n    <CustomModal maxWidth=\"md\" label=\"POMOC\" title=\"Instrukcja\">\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6} sx={{ pr: 1 }}>\n          <Typography mb={1} variant=\"h6\">\n            Obliczenia przewodów\n          </Typography>\n          <Typography mb={2} variant=\"body1\">\n            Wprowadź przepływ w m3/h lub w dm3/s aby program automatycznie dobrał średnicę i\n            policzył spadek jednostkowy.\n          </Typography>\n          <Typography mb={2} variant=\"body1\">\n            Możesz także wprowadzić moc i różnicę temperatur - program obliczy automatycznie\n            przepływ i dobierze średnicę\n          </Typography>\n          <Typography mb={2} variant=\"body1\">\n            Pamiętaj, że możesz zmienić temperaturę czynnika oraz jego rodzaj (woda, glikol\n            propylenowy, etylenowy)\n          </Typography>\n          <Typography mb={2} variant=\"body1\">\n            Dobór rur na podstawie kryterium jednostkowego spadku ciśnienia.\n          </Typography>\n          <Typography mb={2} variant=\"body1\">\n            Opór jednostkowy w Pa/m obliczany jest na podstawie wzoru Darcy-Weisbecha. Chropowatość\n            bezwzględna do wyboru wg użytkownika.\n          </Typography>\n          <Typography mb={2} variant=\"body1\">\n            Po podaniu mocy i różnicy temperatur pole przepływ wypełnia się samo.\n          </Typography>\n          <Typography mb={2} variant=\"body1\">\n            Pole przepływ w m3/h lub dm3/s można wypełniać wedle uznania. Po wpisaniu jednej\n            wartości, druga wartość zostanie automatycznie przeliczona.\n          </Typography>\n          <Typography mb={2} variant=\"body1\">\n            Podane dobory powinny zostać przeanalizowane przez projektanta i dostosowane odpowiednio\n            do danej sytuacji projekstowej.\n          </Typography>\n        </Grid>\n        <Divider\n          sx={{ mr: -1, display: { xs: 'none', md: 'inherit' } }}\n          orientation=\"vertical\"\n          flexItem\n        />\n        <Grid item xs={12} md={6}>\n          <Typography mb={1} variant=\"h6\">\n            Obliczenia zaworów\n          </Typography>\n          <Typography mb={2} variant=\"body1\">\n            wprowadź autorytet zaworu (domyślnie ustawiony 0.5); opory obiegu, na którym będzie\n            zamontowany zawór (bez oporu tego zaworu) oraz wprowadź przepływ w m3/h lub w dm3/s aby\n            programy obliczył wymagany Kv zaworu oraz spadek ciśnienia na tym zaworze w barach.\n          </Typography>\n          <Typography mb={2} variant=\"body1\">\n            Zalecany autorytet to 0,3 - 0,7. Maksymalna wartość autorytetu jaką można wprowadzić do\n            obliczeń to 0.99\n          </Typography>\n          <Typography mb={2} variant=\"body1\">\n            W drugim typie obliczeń wybierz zawór o odpowiednim kvs oraz przepływ w m3/h lub w dm3/s\n            aby program obliczył spadek na prawdziwym zaworze w barach i kilopaskalach\n          </Typography>\n          <Typography mb={2} variant=\"body1\">\n            Dodatkowo aplikacja obliczy realny autorytet zaworu porównując spadek ciśnienia realnego\n            zaworu, do oporów w instalacji\n          </Typography>\n          <Typography mb={2} variant=\"body1\">\n            Wpisując przepływ w m3/h program przeliczy go na dm3/s i odwrotnie.\n          </Typography>\n        </Grid>\n      </Grid>\n    </CustomModal>\n    <CustomModal maxWidth=\"md\" label=\"WIEDZA\" title=\"Wiedza\">\n      <Typography mb={2}>\n        Domyślne kryterium jednostkowego spadku ciśnienia wynosi dP = 160 Pa/m\n      </Typography>\n      <Typography mb={2}>\n        Roztwory glikolu mają większą lepkość niż czysta woda, co wpływa na wspólczynnik tarcia\n        (większe straty ciśnienia).\n      </Typography>\n      <Typography mb={2}>\n        Im większa temperatura wody czy glikolu, tym mniejsza lepkość i tym samym mniejszy\n        współczynnik tarcia (mniejsze straty ciśnienia).\n      </Typography>\n      <Typography mb={2}>\n        1 bar = 100 kPa <br /> 1 kPa = 0,01 bar\n      </Typography>\n      <Typography mb={2}>\n        <b>Glikol propylenowy</b> uznawany jest za związek nieszkodliwy dla zdrowia, lub o bardzo\n        niskiej szkodliwości. Nie stwierdzono by powodował uczulenia, nie wykazuje rakotwórczości i\n        nie jest mutagenny. Kontakt z nierozcieńczonym glikolem propylenowym może wywołać\n        podrażnienia oczu i skóry, jednak niegroźne i łatwo ustępujące, zwykle wraz z ustaniem\n        kontaktu. W ciele jest szybko przekształcany w kwas mlekowy (w sposób podobny do\n        przekształcania w mięśniach cukru w energię). W środowisku łatwo ulega biodegradacji\n      </Typography>\n      <Typography mb={2}>\n        <b>Glikol etylenowy</b> jest substancją szkodliwą, depresyjnie działającą na ośrodkowy układ\n        nerwowy. Działa drażniąco na błony śluzowe nosa i spojówki. Organizm wchłania go poprzez\n        drogi oddechowe, skórę oraz z przewodu pokarmowego. Drogą pokarmową glikol początkowo\n        powoduje objawy podobne do upojenia alkoholem, po czym (po kilku bądź kilkunastu godzinach)\n        doprowadza do kwasicy metabolicznej. W przypadku podgrzewania glikolu powstająca para może\n        prowadzić do utraty przytomności, natomiast w małych stężeniach powoduje podrażnienie nosa i\n        gardła oraz bóle głowy. Warto zatem przy pracy z glikolem zachować szczególną ostrożność.\n      </Typography>\n    </CustomModal>\n  </Box>\n)\n\nexport default HeatingInfo\n","import { Container, Grid, useMediaQuery } from '@mui/material'\nimport React, { useState } from 'react'\nimport AuthValveCalc from '../components/Heating/AuthValveCalc/AuthValveCalc'\nimport HeatingCalc from '../components/Heating/HeatingCalc/HeatingCalc'\nimport HeatingInfo from '../components/Heating/HeatingInfo/HeatingInfo'\nimport { SEO } from '../components/Layout/seo'\nimport CustomTabsNav from '../components/Tabs/CustomTabsNav'\nimport TabPanel from '../components/Tabs/TabPanel'\n\nconst tabs = [\n  { label: 'Przewody', component: <HeatingCalc /> },\n  { label: 'Autorytet zaworu', component: <AuthValveCalc /> },\n]\n\nconst HeatingPage = () => {\n  const [tabIdx, setTabIdx] = useState(0)\n  const matches = useMediaQuery((theme) => theme.breakpoints.up('md'))\n  const tabNavOrientation = matches ? 'vertical' : 'horizontal'\n\n  return (\n    <Container sx={{ mt: 2, px: 1 }} maxWidth=\"md\">\n      <Grid container spacing={1}>\n        <Grid item xs={12} md={2}>\n          <CustomTabsNav\n            orientation={tabNavOrientation}\n            tab={tabIdx}\n            setTab={setTabIdx}\n            tabItems={tabs}\n          />\n        </Grid>\n        <Grid item xs={12} md={10}>\n          {tabs.map((tab, idx) => (\n            <TabPanel key={tab.label} index={idx} value={tabIdx}>\n              {tab.component}\n            </TabPanel>\n          ))}\n          <HeatingInfo />\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default HeatingPage\n\nexport const Head = () => <SEO title=\"ogrzewanie\" />\n"],"names":["container","item","xs","sm","header","pipeObject","steelPipesDiameters","ppPipesDiametersPN20","ppPipesDiametersPN16","pexPipesDiameters","focusedColors","mode","menuItem","label","width","labelId","onChange","defaultValue","dense","useState","selectValue","setSelectValue","useDarkModeContext","sx","color","borderColor","shrink","id","notched","size","value","e","val","target","map","itemValue","itemLabel","key","mediumTypes","pipeRoughness","typeOfBuilding","kvsValves","shouldCalculateInputs","args","some","arg","transformInpt","input","Number","paperSX","py","px","typograhySX","fontSize","textTransform","mb","mt","setSystemPrDrop","valveAuthority","setValveAuthority","systemPressureDrop","setSystemPressureDrop","flowCMPH","setFlowCMPH","flowCDPS","setFlowCDPS","errMsg","valvePrDrop","valveKv","result","setResult","useEffect","Calc","Grid","Paper","elevation","Typography","spacing","CustomTextField","selectOnFocus","textAlign","variant","component","setTrueValvePrDrop","setValveKv","resultNumber","smm","CustomSelectField","handleValveKvhange","systemPrDrop","trueValvePrDrop","calcTrueAuth","roundToDigits","shouldShowResult","POWER_INPUT","FLOW_INPUT","temp","setTemp","power","setPower","deltaTemp","setDeltaTemp","pipeType","setPipeType","typeOfFluid","setTypeOfFluid","results","setResults","lastCalc","setLastCalc","flow","md","helperText","TooMuchFlow","ResultList","Box","my","display","gap","flexWrap","CustomModal","title","PipeListContainer","maxWidth","pr","Divider","mr","orientation","flexItem","tabs","tabIdx","setTabIdx","tabNavOrientation","useMediaQuery","theme","breakpoints","up","Container","CustomTabsNav","tab","setTab","tabItems","idx","TabPanel","index","Head"],"sourceRoot":""}